/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ { 

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        
        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };
        
        combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };
        
        combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };
        
        combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };
         
        combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };

        combo_bspc {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp BSPC>;
        };
        
           combo_del {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp DEL>;
        };
        
    };

        keymap {
                compatible = "zmk,keymap";
                
       	default_layer {
		bindings = <
		&kp Q           &kp W           &kp E           &kp R           &kp T 				&kp Y           &kp U           &kp I           &kp O           &kp P 
		&mt LSFT  A     &kp S           &kp D           &kp F           &kp G 	   	        &kp H           &kp J           &kp K           &kp L           &kp QUOT
		&mt LCTRL Z     &kp X           &kp C           &kp V           &kp B				&kp N           &kp M           &kp CMMA        &kp DOT         &mt LSFT RET
          				                                &kp LALT        &kp LGUI  			&kp SPC         &to 1 
		>;
		};
        		
		second_layer {
		bindings = <
		&kp NUM_1       &kp NUM_2       &kp NUM_3       &kp NUM_4       &kp NUM_5		    &kp NUM_6       &kp NUM_7       &kp NUM_8       &kp NUM_9       &kp NUM_0 
		&kp HASH        &kp QMARK       &kp FSLH        &kp SEMI        &kp EQUAL		    &kp MINUS       &kp PLUS        &kp FSLH        &kp KP_MULTIPLY &kp BKSP
		&kp LSFT        &kp KPLS        &kp LBKT        &kp RBKT        &kp BSLH    		&kp UNDER       &kp LEFT        &kp DOWN        &kp UP          &kp RIGHT
					                                    &to 0           &kp LGUI  	        &kp SPC         &to 2 
		>;
		};

	
        
	};
  
};

