/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
    flavor = "tap-preferred";
   tapping_term_ms = <275>;
};
&lt {
   flavor = "tap-preferred";
    tapping_term_ms = <300>;
};
/ { 

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        }; 

        combo_tilde {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp TILDE>;
        };        
        
           combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };






        combo_bspc {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp BSPC>;
        };

           combo_del {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp DEL>;
        };
           combo_pipe {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp PIPE>;
        };
        
           combo_dash {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp MINUS>;
        };


           combo_dot {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp DOT>;
        };

           combo_qmrk {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp QMARK>;
        };


        combo_excl {
            timeout-ms = <50>;
            key-positions = <16 17 18>;
            bindings = <&kp EXCL>;
        };

           combo_lpar {
            timeout-ms = <50>;
            key-positions = <25 26>;
            bindings = <&kp LPAR>;
        };

           combo_rpar {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp RPAR>;
        };
            combo_quote {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp SINGLE_QUOTE>;
        };
    };




        keymap {
                compatible = "zmk,keymap";            
       	default_layer {
		bindings = <
		&kp Q           &kp W           &kp E           &kp R         &lt 3 T 		    &kp Y           &kp U           &kp I           &kp O       &kp P 
		&mt LSFT A      &kp S           &kp D           &kp F           &lt 4 G	   	    &kp H           &kp J           &kp K           &kp L       &mt LSFT SEMI
		&mt LCTRL Z     &kp X           &kp C           &lt 1 V         &lt 2 B 		&kp N           &kp M           &kp CMMA        &kp DOT     &mt LCTRL FSLH
          				                                &kp LALT        &kp LGUI  		&kp SPACE         &kp RET 
		>;
		};

       	symbol_layer {
		bindings = <
        &kp BANG        &kp ATSN        &kp DLLR        &none        &kp PRCT    	    &kp CRRT        &kp AMPS        &kp EQUAL        &kp LPRN        &kp RPRN 
		&kp TAB         &kp LC(S)       &kp DQT         &kp PIPE2       &kp HASH		&kp MINUS       &kp EQL         &kp LBKT        &kp RBKT        &kp DEL 
		&kp ESC         &kp TILDE 	    &kp NON_US_BSLH &kp NON_US_HASH &kp TILDE2 		&kp MINUS       &kp GRAVE       &kp LBKT        &kp RBKT        &kp DEL 
					                    	            &kp LALT        &kp LGUI 		&kp SPACE         &kp RET
		>;
		};

		
		numpad_layer {
		bindings = <
		&bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4	&kp KP_DIVIDE   &kp N7          &kp N8          &kp N9           &kp KP_PLUS
		&kp LSFT        &bt BT_CLR      &none           &none           &none	  	    &kp KP_DOT      &kp N4          &kp N5          &kp N6           &kp KP_MINUS
		&kp LCTRL       &bt BT_NXT      &bt BT_PRV      &none           &none   		&kp N0          &kp N1          &kp N2          &kp N3           &kp KP_MULTIPLY
                                                        &kp LALT        &kp LGUI  	    &kp SPACE       &kp RET
		>;
		};	
			
		
		Mayer_tap_layer {
		bindings = <		
		&none       &none        &none          &none       &none		                &kp LG(X)      &kp LG(C)      &kp UP       &kp LG(V)    &kp P 
		&kp LSFT    &none        &kp D          &none       &none		                &kp LG(Z)      &kp LEFT       &kp DOWN     &kp RIGHT    &kp LSFT
		&kp LCTRL   &none        &none          &kp V       &none    		            &none          &none          &none        &none        &mt LCTRL RET
					                            &kp LALT       &kp LGUI  	        &kp SPACE      &kp RET
		>;
		};
		
		Wayer_tap_layer {
		bindings = <		
		&none       &none        &none        &none          &none		    &kp LC(X)      &kp LC(C)      &kp UP       &kp LC(V)    &kp P
		&kp LSFT    &none        &kp D        &none          &none		    &kp LC(Z)      &kp LEFT       &kp DOWN     &kp RIGHT    &kp LSFT
		&kp LCTRL   &none        &none        &kp V          &none    	    &none          &none          &none        &none        &mt LCTRL RET
                                            &kp LALT       &kp LGUI  	    &kp SPACE      &kp RET
		>;
		};
        
	};
  
};

